<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:PetArmy.Views"
       xmlns:fa="clr-namespace:PetArmy"
       xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
       Title="PetArmy"
       x:Class="PetArmy.AppShell"
       xmlns:Helpers="clr-namespace:PetArmy.Helpers"
       BindingContext="{Binding Main, Source={StaticResource Locator}}">

    <Shell.FlyoutBackground>
        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="1,1">
            <GradientStop Color="{AppThemeBinding Dark={StaticResource Grad2}, Light=White}"
                          Offset="0.1" />
            <GradientStop Color="{AppThemeBinding Dark={StaticResource CustomPink}, Light=White}"
                          Offset="0.6" />
            <GradientStop Color="{AppThemeBinding Dark={StaticResource CustomOrange}, Light=White}"
                          Offset="1.0" />
        </LinearGradientBrush>
    </Shell.FlyoutBackground>

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid BackgroundColor="{AppThemeBinding  Light={StaticResource LuckyPoint}, Dark={StaticResource SpaceCadet}}"
                  HeightRequest="200">
                <Image Aspect="AspectFit"
                       Source="PetsArmy.png"
                       Opacity="1" />
            </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>



    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle"
                   TargetType="Element">
                <Setter Property="Shell.BackgroundColor"
                        Value="{AppThemeBinding  Light={StaticResource LuckyPoint}, Dark={StaticResource SpaceCadet}}" />
                <Setter Property="Shell.ForegroundColor"
                        Value="White" />
                <Setter Property="Shell.TitleColor"
                        Value="White" />
                <Setter Property="Shell.DisabledColor"
                        Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor"
                        Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor"
                        Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor"
                        Value="White" />
                <Setter Property="Shell.TabBarUnselectedColor"
                        Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarTitleColor"
                        Value="White" />
            </Style>
            <Style TargetType="TabBar"
                   BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem"
                   BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle"
                   TargetType="Label">
                <Setter Property="TextColor"
                        Value="white"></Setter>
            </Style>

            <Style Class="FlyoutItemLayoutStyle"
                   TargetType="Layout"
                   ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding  Light={StaticResource JacksonPurple}, Dark={StaticResource SpaceCadet}}" />
                                    <Setter TargetName="FlyoutItemLabel"
                                            Property="Label.TextColor"
                                            Value="{AppThemeBinding  Light=LightGray, Dark=White}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding  Light={StaticResource LuckyPoint}, Dark={StaticResource LuckyPoint}}" />
                                    <Setter TargetName="FlyoutItemLabel"
                                            Property="Label.TextColor"
                                            Value="{AppThemeBinding  Light=White,Dark=White}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle"
                   TargetType="Layout"
                   ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding  Light={StaticResource JacksonPurple}, Dark={StaticResource SpaceCadet}}" />
                                    <Setter TargetName="FlyoutItemLabel"
                                            Property="Label.TextColor"
                                            Value="{AppThemeBinding  Light=LightGray, Dark=White}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding  Light={StaticResource LuckyPoint}, Dark={StaticResource LuckyPoint}}" />
                                    <Setter TargetName="FlyoutItemLabel"
                                            Property="Label.TextColor"
                                            Value="{AppThemeBinding  Light=White,Dark=White}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <ShellContent Route="LoginPage"
                      ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>


    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->

    <!--Perfil-->
    <FlyoutItem Title="{xct:Translate ProfileKey}"
                IsVisible="{Binding Login.Is_Admin}">
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.User}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </FlyoutItem.Icon>
        <ShellContent Route="UserProfileTabbedView"
                      ContentTemplate="{DataTemplate local:UserProfileTabbedView}" />
    </FlyoutItem>

    <!--Solicitudes Adopcion-->
    <FlyoutItem Title="{xct:Translate AdoptionRequests}"
                IsVisible="{Binding Login.Is_Admin}">
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.Clipboard}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </FlyoutItem.Icon>
        <ShellContent Route="SolicitudesAdopcion"
                      ContentTemplate="{DataTemplate local:SolicitudesAdopcion}" />
    </FlyoutItem>

    <!--Mis Servicios Refugios - Casa cuna-->
    <FlyoutItem Title="{xct:Translate MyServicesKey}"
                IsVisible="{Binding Login.Is_Admin}">
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.Warehouse}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </FlyoutItem.Icon>
        <ShellContent Route="MyServicesView"
                      Title="{xct:Translate MyServicesKey}"
                      ContentTemplate="{DataTemplate local:MyServicesView}" />
    </FlyoutItem>

    <!--Mascotas-->
    <FlyoutItem Title="{xct:Translate PetsKey}"
                IsVisible="{Binding Login.Is_Admin}">
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.Paw}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </FlyoutItem.Icon>
        <ShellContent Route="ListMascotasPage"
                      ContentTemplate="{DataTemplate local:ListMascotasPage}" />
    </FlyoutItem>

    <!--AccountRequests-->
    <FlyoutItem Title="{xct:Translate AccountRequests}"
                IsVisible="{Binding Login.Is_Admin}">
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.User}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </FlyoutItem.Icon>
        <ShellContent Route="AdminLandingPage"
                      ContentTemplate="{DataTemplate local:AdminLandingPage}" />
    </FlyoutItem>

    <!--Campanias-->
    <FlyoutItem Title="{xct:Translate Campaign}"
                IsVisible="{Binding Login.Is_Admin}">
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.Heart}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </FlyoutItem.Icon>
        <ShellContent Route="CampCastraView"
                      ContentTemplate="{DataTemplate local:CampCastraView}" />
    </FlyoutItem>

    <!--Feed-->
    <FlyoutItem Title="{xct:Translate MyFeedKey}"
                IsVisible="{Binding Login.Is_Admin, Converter={StaticResource InverseBool}}">
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.InfoCircle}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </FlyoutItem.Icon>
        <ShellContent Route="Feed"
                      ContentTemplate="{DataTemplate local:FeedTabeedView}" />
    </FlyoutItem>

    <!--Help-->
    <FlyoutItem Title="{xct:Translate HelpKey}">
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.QuestionCircle}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </FlyoutItem.Icon>
        <ShellContent Route="SearchBar"
                      ContentTemplate="{DataTemplate local:SearchBar}" />
    </FlyoutItem>




    <!-- the Flyout is visible this will be a menu item you can tie a click behavior to-->
    <MenuItem Text="{xct:Translate LogOut}"
              StyleClass="MenuItemLayoutStyle"
              Clicked="OnMenuItemClicked">
        <MenuItem.IconImageSource>
            <FontImageSource FontFamily="{StaticResource MaterialFontFamily}"
                             Glyph="{x:Static fa:IconClass.DoorOpen}"
                             Color="{AppThemeBinding Light=White, Dark={StaticResource CustomPink}}" />
        </MenuItem.IconImageSource>
    </MenuItem>

    <Shell.FlyoutFooterTemplate>
        <DataTemplate>
            <StackLayout BackgroundColor="{AppThemeBinding Light=White, 
                                               Dark={StaticResource LuckyPoint}}"
                         VerticalOptions="StartAndExpand">
                <Label Text="Pet Army"
                       TextColor="{AppThemeBinding Light={StaticResource JacksonPurple}, Dark={StaticResource CustomPink}}"
                       FontFamily="{StaticResource MaterialFontFamily}"
                       HorizontalOptions="Center"
                       VerticalOptions="FillAndExpand"
                       Padding="20" />
            </StackLayout>

        </DataTemplate>

    </Shell.FlyoutFooterTemplate>
</Shell>
